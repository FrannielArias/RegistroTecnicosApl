@page "/Trabajo/Edit/{TrabajoId:int}"
@inject TrabajosServices trabajoService
@inject ClientesServices clienteService
@inject TecnicoServices tecnicoService
@inject PrioridadesServices prioridadService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Edit Trabajo</PageTitle>
<EditForm Model="Trabajo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="shadow-lg">
            @*Header*@
            <div class="card-header">
                <div class="text-center">
                    <h3><strong>Editar trabajo</strong></h3>
                </div>
            </div>
            @*Body*@
            <div class="card-body">
                @*TrabajoId*@
                <div class="col-3 mt-2">
                    <label class="form-label"><strong>TrabajoId</strong></label>
                    <div class="id-input">
                        <InputNumber class="form-control" readonly @bind-Value=Trabajo.TrabajoId></InputNumber>
                    </div>
                </div>
                @*Fecha*@
                <div class="col-2 mt-2">
                    <label class="form-label"><strong>Fecha</strong></label>
                    <InputDate class="form-control" @bind-Value="Trabajo.Fecha"></InputDate>
                </div>
                @*Cliente*@
                <div class="col-2 mt-2">
                    <label class="form-label"><strong>Cliente</strong></label>
                    <InputSelect class="form-select" @bind-Value=Trabajo.ClienteId>
                        <option value="0" selected disabled>Seleccione un cliente</option>
                        @foreach(var cliente in ListarClientes)
                        {
                            <option value="@cliente.ClienteId">@cliente.Nombres</option>
                        }
                    </InputSelect>
                </div>
                @*Tecnico*@
                <div class="col-3 mt-2">
                    <label class="form-label"><strong>Tecnico</strong></label>
                    <InputSelect class="form-select" @bind-Value=Trabajo.TecnicoId>
                        <option value="0" selected disabled>Seleccione un Tecnico</option>
                        @foreach (var tecnico in ListarTecnico)
                        {
                            <option value="@tecnico.TecnicoId">@tecnico.Nombres - @tecnico?.TipoTecnico?.Descripcion</option>
                        }
                    </InputSelect>
                </div>
                @*Prioridad*@
                <div class="col-3" mt-2>
                    <label class="col-form-label"><strong>Prioridad</strong></label>
                    <InputSelect class="form-select" @bind-Value=Trabajo.PrioridadId>
                        <option value="0" selected disabled>Seleccione una prioridad</option>
                        @foreach (var prioridad in ListarPrioridad)
                        {
                            <option value="@prioridad.PrioridadId">@prioridad.Descripcion - @prioridad.Tiempo</option>
                        }
                    </InputSelect>
                </div>
                @*Descripcion*@
                <div class="col-3 mt-2">
                    <label class="form-label"><strong>Descripcion</strong></label>
                    <InputText class="form-control" @bind-Value=Trabajo.Descripcion></InputText>
                    <ValidationMessage For="() => Trabajo.Descripcion"/>
                </div>
                @*Monto*@
                <div class="col-3 mt-2">
                    <label class="form-label"><strong>Monto</strong></label>
                    <InputNumber class="form-control" @bind-Value="Trabajo.Monto"></InputNumber>
                    <ValidationMessage For="() => Trabajo.Monto" />
                </div>
            </div>
            @*Footer*@
            <div class="card-footer">
                <button type="button" class="btn btn-secondary" @onclick=Volver>Volver</button>
                <button type="submit" class="btn btn-success">Guardar</button>
            </div>
        </div>

    </div>

</EditForm>

@code {
    [Parameter]
    public int TrabajoId { get; set; }
    public Trabajos Trabajo { get; set; } = new Trabajos();
    public List<Tecnicos> ListarTecnico { get; set; } = new List<Tecnicos>();
    public List<Clientes> ListarClientes { get; set; } = new List<Clientes>();
    public List<Prioridades> ListarPrioridad { get; set; } = new List<Prioridades>();
    public string Mensaje = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        ListarTecnico = await tecnicoService.Listar(t => true);
        ListarClientes = await clienteService.Listar(c => true);
        ListarPrioridad = await prioridadService.Listar(p => true);

        Trabajo = await trabajoService.Buscar(TrabajoId);
    }

    public void Volver()
    {
        navigationManager.NavigateTo("Trabajo/Index");
    }

    public async Task Guardar()
    {
        var modificar = await trabajoService.Guardar(Trabajo);

        if (modificar)
        {
            Mensaje = "Se ha modificar correctamente.";
            await Task.Delay(2000);
            Volver();
        }
        else
        {
            Mensaje = "No se pudo modificar el trabajo.";
        }
    }
}

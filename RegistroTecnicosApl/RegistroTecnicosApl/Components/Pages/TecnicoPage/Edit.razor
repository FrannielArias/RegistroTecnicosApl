@page "/Tecnico/Edit/{TecnicoId:int}"
@inject TecnicoServices tecnicoService
@inject TiposTecnicosServices tipoTecnicoService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Editar</PageTitle>
<EditForm Model="tecnico" OnValidSubmit="Modificar">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="shadow-lg">
            @*Header*@
            <div class="card-header">
                <div class="text-center">
                    <h3><strong>Editar t&eacute;cnico</strong></h3>
                </div>
            </div>
            @*Body*@
            <div class="card-body">
                @*TecnicoId*@
                <div class="col-3">
                    <label class="form-label"><strong>Tecnico Id</strong></label>
                    <div class="id-input">
                        <InputNumber class="form-control" readonly @bind-Value=tecnico.TecnicoId></InputNumber>
                    </div>
                </div>
                @*Nombre*@
                <div class="col-3">
                    <label class="form-label"><strong>Nombre</strong></label>
                    <InputText class="form-control" @bind-Value="tecnico.Nombres"></InputText>
                    <ValidationMessage For="(()=>tecnico.Nombres)" />
                </div>
                @*TipoTecnico*@
                <div class="col-3 mt-3">
                    <label class="form-label"><strong>TipoTecnico</strong></label>
                    <InputSelect class="form-select" @bind-Value="tecnico.TipoTecnicoId">
                        <option value="0" selected disabled>Seleccione un tipo tecnico</option>
                        @foreach (var tipoTecnico in ListarTipoTecnico)
                        {
                            <option value="@tipoTecnico.TipoTecnicoId">@tipoTecnico.Descripcion</option>
                        }
                    </InputSelect>
                </div>
                @*SueldoHora*@
                <div class="col-3">
                    <label class="=form-label"><strong>Sueldo por hora</strong></label>
                    <InputNumber class="form-control" @bind-Value=tecnico.SueldoHora></InputNumber>
                    <ValidationMessage For="(()=> tecnico.SueldoHora)" />
                </div>
            </div>
            @*Footer*@
            <div class="card-footer">
                <button type="button" class="btn btn-secondary" @onclick=Volver>Volver</button>
                <button type="submit" class="btn btn-success">Modificar</button>
            </div>
        </div>
        @Mensaje
    </div>
</EditForm>

@code {
    [Parameter]
    public int TecnicoId { set; get; }
    public List<TiposTecnicos> ListarTipoTecnico = new List<TiposTecnicos>();
    public Tecnicos tecnico { set; get; } = new Tecnicos();
    public string Mensaje { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        tecnico = await tecnicoService.Buscar(TecnicoId);
        ListarTipoTecnico = await tipoTecnicoService.Listar(t => true);
    }

    public async Task Modificar()
    {
        if (await Validar())
        {
            Mensaje = "Ya existe un Tecnicos con este nombre";
            return;
        }

        var modificar = await tecnicoService.Guardar(tecnico);

        if (modificar)
        {
            Mensaje = "Se ha modificado el tecnico correctamente.";
            await Task.Delay(2000);
            Volver();
        }
        else
        {
            Mensaje = "No se pudo modificar el tecnico";
        }
    }

    public void Volver()
    {
        navigationManager.NavigateTo("Tecnicos/Index");
    }

    public async Task<bool> Validar()
    {
        var existe = await tecnicoService.ExisteTecnico(tecnico.TecnicoId, tecnico.Nombres);
        return existe;
    }
}
